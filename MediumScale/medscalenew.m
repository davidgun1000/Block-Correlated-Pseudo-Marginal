%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

tic0 = tic;
% Save empty dates and dseries objects in memory.
dates('initialize');
dseries('initialize');
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info ys0_ ex0_
options_ = [];
M_.fname = 'medscalenew';
M_.dynare_version = '4.5.7';
oo_.dynare_version = '4.5.7';
options_.dynare_version = '4.5.7';
%
% Some global variables initialization
%
global_initialization;
diary off;
M_.exo_names = 'epsilongt';
M_.exo_names_tex = 'epsilongt';
M_.exo_names_long = 'epsilongt';
M_.exo_names = char(M_.exo_names, 'epsilonmut');
M_.exo_names_tex = char(M_.exo_names_tex, 'epsilonmut');
M_.exo_names_long = char(M_.exo_names_long, 'epsilonmut');
M_.exo_names = char(M_.exo_names, 'epsilonetat');
M_.exo_names_tex = char(M_.exo_names_tex, 'epsilonetat');
M_.exo_names_long = char(M_.exo_names_long, 'epsilonetat');
M_.exo_names = char(M_.exo_names, 'epsilonzt');
M_.exo_names_tex = char(M_.exo_names_tex, 'epsilonzt');
M_.exo_names_long = char(M_.exo_names_long, 'epsilonzt');
M_.exo_names = char(M_.exo_names, 'epsilonRt');
M_.exo_names_tex = char(M_.exo_names_tex, 'epsilonRt');
M_.exo_names_long = char(M_.exo_names_long, 'epsilonRt');
M_.endo_names = 'lambdatilde';
M_.endo_names_tex = 'lambdatilde';
M_.endo_names_long = 'lambdatilde';
M_.endo_names = char(M_.endo_names, 'ct');
M_.endo_names_tex = char(M_.endo_names_tex, 'ct');
M_.endo_names_long = char(M_.endo_names_long, 'ct');
M_.endo_names = char(M_.endo_names, 'Vct');
M_.endo_names_tex = char(M_.endo_names_tex, 'Vct');
M_.endo_names_long = char(M_.endo_names_long, 'Vct');
M_.endo_names = char(M_.endo_names, 'mct');
M_.endo_names_tex = char(M_.endo_names_tex, 'mct');
M_.endo_names_long = char(M_.endo_names_long, 'mct');
M_.endo_names = char(M_.endo_names, 'pit');
M_.endo_names_tex = char(M_.endo_names_tex, 'pit');
M_.endo_names_long = char(M_.endo_names_long, 'pit');
M_.endo_names = char(M_.endo_names, 'pittilde');
M_.endo_names_tex = char(M_.endo_names_tex, 'pittilde');
M_.endo_names_long = char(M_.endo_names_long, 'pittilde');
M_.endo_names = char(M_.endo_names, 'pitw');
M_.endo_names_tex = char(M_.endo_names_tex, 'pitw');
M_.endo_names_long = char(M_.endo_names_long, 'pitw');
M_.endo_names = char(M_.endo_names, 'pittildew');
M_.endo_names_tex = char(M_.endo_names_tex, 'pittildew');
M_.endo_names_long = char(M_.endo_names_long, 'pittildew');
M_.endo_names = char(M_.endo_names, 'wt');
M_.endo_names_tex = char(M_.endo_names_tex, 'wt');
M_.endo_names_long = char(M_.endo_names_long, 'wt');
M_.endo_names = char(M_.endo_names, 'nt');
M_.endo_names_tex = char(M_.endo_names_tex, 'nt');
M_.endo_names_long = char(M_.endo_names_long, 'nt');
M_.endo_names = char(M_.endo_names, 'Vit');
M_.endo_names_tex = char(M_.endo_names_tex, 'Vit');
M_.endo_names_long = char(M_.endo_names_long, 'Vit');
M_.endo_names = char(M_.endo_names, 'it');
M_.endo_names_tex = char(M_.endo_names_tex, 'it');
M_.endo_names_long = char(M_.endo_names_long, 'it');
M_.endo_names = char(M_.endo_names, 'qt');
M_.endo_names_tex = char(M_.endo_names_tex, 'qt');
M_.endo_names_long = char(M_.endo_names_long, 'qt');
M_.endo_names = char(M_.endo_names, 'Ayt');
M_.endo_names_tex = char(M_.endo_names_tex, 'Ayt');
M_.endo_names_long = char(M_.endo_names_long, 'Ayt');
M_.endo_names = char(M_.endo_names, 'rtk');
M_.endo_names_tex = char(M_.endo_names_tex, 'rtk');
M_.endo_names_long = char(M_.endo_names_long, 'rtk');
M_.endo_names = char(M_.endo_names, 'ut');
M_.endo_names_tex = char(M_.endo_names_tex, 'ut');
M_.endo_names_long = char(M_.endo_names_long, 'ut');
M_.endo_names = char(M_.endo_names, 'aut');
M_.endo_names_tex = char(M_.endo_names_tex, 'aut');
M_.endo_names_long = char(M_.endo_names_long, 'aut');
M_.endo_names = char(M_.endo_names, 'ktbar');
M_.endo_names_tex = char(M_.endo_names_tex, 'ktbar');
M_.endo_names_long = char(M_.endo_names_long, 'ktbar');
M_.endo_names = char(M_.endo_names, 'Rt');
M_.endo_names_tex = char(M_.endo_names_tex, 'Rt');
M_.endo_names_long = char(M_.endo_names_long, 'Rt');
M_.endo_names = char(M_.endo_names, 'mut');
M_.endo_names_tex = char(M_.endo_names_tex, 'mut');
M_.endo_names_long = char(M_.endo_names_long, 'mut');
M_.endo_names = char(M_.endo_names, 'etat');
M_.endo_names_tex = char(M_.endo_names_tex, 'etat');
M_.endo_names_long = char(M_.endo_names_long, 'etat');
M_.endo_names = char(M_.endo_names, 'Gzt');
M_.endo_names_tex = char(M_.endo_names_tex, 'Gzt');
M_.endo_names_long = char(M_.endo_names_long, 'Gzt');
M_.endo_names = char(M_.endo_names, 'gt');
M_.endo_names_tex = char(M_.endo_names_tex, 'gt');
M_.endo_names_long = char(M_.endo_names_long, 'gt');
M_.endo_names = char(M_.endo_names, 'xtg');
M_.endo_names_tex = char(M_.endo_names_tex, 'xtg');
M_.endo_names_long = char(M_.endo_names_long, 'xtg');
M_.endo_names = char(M_.endo_names, 'yt');
M_.endo_names_tex = char(M_.endo_names_tex, 'yt');
M_.endo_names_long = char(M_.endo_names_long, 'yt');
M_.endo_names = char(M_.endo_names, 'yt_lag');
M_.endo_names_tex = char(M_.endo_names_tex, 'yt\_lag');
M_.endo_names_long = char(M_.endo_names_long, 'yt_lag');
M_.endo_names = char(M_.endo_names, 'ct_lag');
M_.endo_names_tex = char(M_.endo_names_tex, 'ct\_lag');
M_.endo_names_long = char(M_.endo_names_long, 'ct_lag');
M_.endo_names = char(M_.endo_names, 'it_lag');
M_.endo_names_tex = char(M_.endo_names_tex, 'it\_lag');
M_.endo_names_long = char(M_.endo_names_long, 'it_lag');
M_.endo_names = char(M_.endo_names, 'zt');
M_.endo_names_tex = char(M_.endo_names_tex, 'zt');
M_.endo_names_long = char(M_.endo_names_long, 'zt');
M_.endo_names = char(M_.endo_names, 'AUX_EXO_LEAD_139');
M_.endo_names_tex = char(M_.endo_names_tex, 'AUX\_EXO\_LEAD\_139');
M_.endo_names_long = char(M_.endo_names_long, 'AUX_EXO_LEAD_139');
M_.endo_partitions = struct();
M_.param_names = 'BETA_EST';
M_.param_names_tex = 'BETA\_EST';
M_.param_names_long = 'BETA_EST';
M_.param_names = char(M_.param_names, 'BETA');
M_.param_names_tex = char(M_.param_names_tex, 'BETA');
M_.param_names_long = char(M_.param_names_long, 'BETA');
M_.param_names = char(M_.param_names, 'alpha');
M_.param_names_tex = char(M_.param_names_tex, 'alpha');
M_.param_names_long = char(M_.param_names_long, 'alpha');
M_.param_names = char(M_.param_names, 'DELTA');
M_.param_names_tex = char(M_.param_names_tex, 'DELTA');
M_.param_names_long = char(M_.param_names_long, 'DELTA');
M_.param_names = char(M_.param_names, 'epsilonp');
M_.param_names_tex = char(M_.param_names_tex, 'epsilonp');
M_.param_names_long = char(M_.param_names_long, 'epsilonp');
M_.param_names = char(M_.param_names, 'epsilonw');
M_.param_names_tex = char(M_.param_names_tex, 'epsilonw');
M_.param_names_long = char(M_.param_names_long, 'epsilonw');
M_.param_names = char(M_.param_names, 'gamma');
M_.param_names_tex = char(M_.param_names_tex, 'gamma');
M_.param_names_long = char(M_.param_names_long, 'gamma');
M_.param_names = char(M_.param_names, 'sigmaL');
M_.param_names_tex = char(M_.param_names_tex, 'sigmaL');
M_.param_names_long = char(M_.param_names_long, 'sigmaL');
M_.param_names = char(M_.param_names, 'psiI');
M_.param_names_tex = char(M_.param_names_tex, 'psiI');
M_.param_names_long = char(M_.param_names_long, 'psiI');
M_.param_names = char(M_.param_names, 'psip');
M_.param_names_tex = char(M_.param_names_tex, 'psip');
M_.param_names_long = char(M_.param_names_long, 'psip');
M_.param_names = char(M_.param_names, 'psiw');
M_.param_names_tex = char(M_.param_names_tex, 'psiw');
M_.param_names_long = char(M_.param_names_long, 'psiw');
M_.param_names = char(M_.param_names, 'rhoR');
M_.param_names_tex = char(M_.param_names_tex, 'rhoR');
M_.param_names_long = char(M_.param_names_long, 'rhoR');
M_.param_names = char(M_.param_names, 'gammapi');
M_.param_names_tex = char(M_.param_names_tex, 'gammapi');
M_.param_names_long = char(M_.param_names_long, 'gammapi');
M_.param_names = char(M_.param_names, 'gammax');
M_.param_names_tex = char(M_.param_names_tex, 'gammax');
M_.param_names_long = char(M_.param_names_long, 'gammax');
M_.param_names = char(M_.param_names, 'gammag');
M_.param_names_tex = char(M_.param_names_tex, 'gammag');
M_.param_names_long = char(M_.param_names_long, 'gammag');
M_.param_names = char(M_.param_names, 'a');
M_.param_names_tex = char(M_.param_names_tex, 'a');
M_.param_names_long = char(M_.param_names_long, 'a');
M_.param_names = char(M_.param_names, 'aest');
M_.param_names_tex = char(M_.param_names_tex, 'aest');
M_.param_names_long = char(M_.param_names_long, 'aest');
M_.param_names = char(M_.param_names, 'aw');
M_.param_names_tex = char(M_.param_names_tex, 'aw');
M_.param_names_long = char(M_.param_names_long, 'aw');
M_.param_names = char(M_.param_names, 'awest');
M_.param_names_tex = char(M_.param_names_tex, 'awest');
M_.param_names_long = char(M_.param_names_long, 'awest');
M_.param_names = char(M_.param_names, 'rhog');
M_.param_names_tex = char(M_.param_names_tex, 'rhog');
M_.param_names_long = char(M_.param_names_long, 'rhog');
M_.param_names = char(M_.param_names, 'rhoeta');
M_.param_names_tex = char(M_.param_names_tex, 'rhoeta');
M_.param_names_long = char(M_.param_names_long, 'rhoeta');
M_.param_names = char(M_.param_names, 'rhomu');
M_.param_names_tex = char(M_.param_names_tex, 'rhomu');
M_.param_names_long = char(M_.param_names_long, 'rhomu');
M_.param_names = char(M_.param_names, 'g');
M_.param_names_tex = char(M_.param_names_tex, 'g');
M_.param_names_long = char(M_.param_names_long, 'g');
M_.param_names = char(M_.param_names, 'pibar');
M_.param_names_tex = char(M_.param_names_tex, 'pibar');
M_.param_names_long = char(M_.param_names_long, 'pibar');
M_.param_names = char(M_.param_names, 'Nss');
M_.param_names_tex = char(M_.param_names_tex, 'Nss');
M_.param_names_long = char(M_.param_names_long, 'Nss');
M_.param_names = char(M_.param_names, 'c_y');
M_.param_names_tex = char(M_.param_names_tex, 'c\_y');
M_.param_names_long = char(M_.param_names_long, 'c_y');
M_.param_names = char(M_.param_names, 'numerator');
M_.param_names_tex = char(M_.param_names_tex, 'numerator');
M_.param_names_long = char(M_.param_names_long, 'numerator');
M_.param_names = char(M_.param_names, 'denominator');
M_.param_names_tex = char(M_.param_names_tex, 'denominator');
M_.param_names_long = char(M_.param_names_long, 'denominator');
M_.param_names = char(M_.param_names, 'psiL');
M_.param_names_tex = char(M_.param_names_tex, 'psiL');
M_.param_names_long = char(M_.param_names_long, 'psiL');
M_.param_names = char(M_.param_names, 'Rbar');
M_.param_names_tex = char(M_.param_names_tex, 'Rbar');
M_.param_names_long = char(M_.param_names_long, 'Rbar');
M_.param_names = char(M_.param_names, 'sigma_g');
M_.param_names_tex = char(M_.param_names_tex, 'sigma\_g');
M_.param_names_long = char(M_.param_names_long, 'sigma_g');
M_.param_names = char(M_.param_names, 'sigma_mu');
M_.param_names_tex = char(M_.param_names_tex, 'sigma\_mu');
M_.param_names_long = char(M_.param_names_long, 'sigma_mu');
M_.param_names = char(M_.param_names, 'sigma_eta');
M_.param_names_tex = char(M_.param_names_tex, 'sigma\_eta');
M_.param_names_long = char(M_.param_names_long, 'sigma_eta');
M_.param_names = char(M_.param_names, 'sigma_z');
M_.param_names_tex = char(M_.param_names_tex, 'sigma\_z');
M_.param_names_long = char(M_.param_names_long, 'sigma_z');
M_.param_names = char(M_.param_names, 'sigma_r');
M_.param_names_tex = char(M_.param_names_tex, 'sigma\_r');
M_.param_names_long = char(M_.param_names_long, 'sigma_r');
M_.param_names = char(M_.param_names, 'sigma_gest');
M_.param_names_tex = char(M_.param_names_tex, 'sigma\_gest');
M_.param_names_long = char(M_.param_names_long, 'sigma_gest');
M_.param_names = char(M_.param_names, 'sigma_muest');
M_.param_names_tex = char(M_.param_names_tex, 'sigma\_muest');
M_.param_names_long = char(M_.param_names_long, 'sigma_muest');
M_.param_names = char(M_.param_names, 'sigma_etaest');
M_.param_names_tex = char(M_.param_names_tex, 'sigma\_etaest');
M_.param_names_long = char(M_.param_names_long, 'sigma_etaest');
M_.param_names = char(M_.param_names, 'sigma_zest');
M_.param_names_tex = char(M_.param_names_tex, 'sigma\_zest');
M_.param_names_long = char(M_.param_names_long, 'sigma_zest');
M_.param_names = char(M_.param_names, 'sigma_rest');
M_.param_names_tex = char(M_.param_names_tex, 'sigma\_rest');
M_.param_names_long = char(M_.param_names_long, 'sigma_rest');
M_.param_names = char(M_.param_names, 'eta');
M_.param_names_tex = char(M_.param_names_tex, 'eta');
M_.param_names_long = char(M_.param_names_long, 'eta');
M_.param_names = char(M_.param_names, 'mu');
M_.param_names_tex = char(M_.param_names_tex, 'mu');
M_.param_names_long = char(M_.param_names_long, 'mu');
M_.param_names = char(M_.param_names, 'rk');
M_.param_names_tex = char(M_.param_names_tex, 'rk');
M_.param_names_long = char(M_.param_names_long, 'rk');
M_.param_names = char(M_.param_names, 'sigmaa');
M_.param_names_tex = char(M_.param_names_tex, 'sigmaa');
M_.param_names_long = char(M_.param_names_long, 'sigmaa');
M_.param_names = char(M_.param_names, 'Gzest');
M_.param_names_tex = char(M_.param_names_tex, 'Gzest');
M_.param_names_long = char(M_.param_names_long, 'Gzest');
M_.param_names = char(M_.param_names, 'Gz');
M_.param_names_tex = char(M_.param_names_tex, 'Gz');
M_.param_names_long = char(M_.param_names_long, 'Gz');
M_.param_names = char(M_.param_names, 'pibar_est');
M_.param_names_tex = char(M_.param_names_tex, 'pibar\_est');
M_.param_names_long = char(M_.param_names_long, 'pibar_est');
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 5;
M_.endo_nbr = 30;
M_.param_nbr = 47;
M_.orig_endo_nbr = 29;
M_.aux_vars(1).endo_index = 30;
M_.aux_vars(1).type = 2;
M_.Sigma_e = zeros(5, 5);
M_.Correlation_matrix = eye(5, 5);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = 1;
M_.det_shocks = [];
options_.block=0;
options_.bytecode=0;
options_.use_dll=0;
M_.hessian_eq_zero = 0;
erase_compiled_function('medscalenew_static');
erase_compiled_function('medscalenew_dynamic');
M_.orig_eq_nbr = 29;
M_.eq_nbr = 30;
M_.ramsey_eq_nbr = 0;
M_.set_auxiliary_variables = exist(['./' M_.fname '_set_auxiliary_variables.m'], 'file') == 2;
M_.lead_lag_incidence = [
 1 13 43;
 2 14 44;
 0 15 0;
 0 16 0;
 3 17 45;
 4 18 0;
 0 19 46;
 0 20 47;
 5 21 0;
 0 22 0;
 0 23 0;
 6 24 0;
 0 25 48;
 0 26 0;
 0 27 49;
 0 28 50;
 0 29 51;
 7 30 0;
 8 31 0;
 9 32 0;
 10 33 0;
 0 34 52;
 11 35 0;
 0 36 0;
 12 37 53;
 0 38 0;
 0 39 0;
 0 40 0;
 0 41 0;
 0 42 54;]';
M_.nstatic = 10;
M_.nfwrd   = 8;
M_.npred   = 8;
M_.nboth   = 4;
M_.nsfwrd   = 12;
M_.nspred   = 12;
M_.ndynamic   = 20;
M_.equations_tags = {
};
M_.static_and_dynamic_models_differ = 0;
M_.exo_names_orig_ord = [1:5];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(30, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(5, 1);
M_.params = NaN(47, 1);
M_.NNZDerivatives = [137; 352; -1];
load PARAMSTORE;
set_param_value('BETA_EST',BETA_EST);
set_param_value('Gzest',Gzest);
set_param_value('pibar_est',pibar_est);
set_param_value('alpha',alpha);
set_param_value('DELTA',DELTA);
set_param_value('epsilonp',epsilonp);
set_param_value('epsilonw',epsilonw);
set_param_value('gamma',gamma);
set_param_value('sigmaL',sigmaL);
set_param_value('psiI',psiI);
set_param_value('psip',psip);
set_param_value('psiw',psiw);
set_param_value('rhoR',rhoR);
set_param_value('gammapi',gammapi);
set_param_value('gammax',gammax);
set_param_value('gammag',gammag);
set_param_value('sigmaa',sigmaa);
set_param_value('psiL',psiL);
set_param_value('aest',aest);
set_param_value('awest',awest);
set_param_value('rhog',rhog);
set_param_value('rhoeta',rhoeta);
set_param_value('rhomu',rhomu);
set_param_value('sigma_gest',sigma_gest);
set_param_value('sigma_muest',sigma_muest);
set_param_value('sigma_etaest',sigma_etaest);
set_param_value('sigma_zest',sigma_zest);
set_param_value('sigma_rest',sigma_rest);
set_param_value('g',g);
set_param_value('eta',eta);
set_param_value('mu',mu);
M_.params( 24 ) = 1+M_.params(47)/100;
pibar = M_.params( 24 );
M_.params( 46 ) = exp(M_.params(45)/100);
Gz = M_.params( 46 );
M_.params( 2 ) = (1+M_.params(1)/100)^(-1);
BETA = M_.params( 2 );
M_.params( 16 ) = 1-M_.params(17);
a = M_.params( 16 );
M_.params( 18 ) = 1-M_.params(19);
aw = M_.params( 18 );
M_.params( 31 ) = M_.params(36)/100;
sigma_g = M_.params( 31 );
M_.params( 32 ) = M_.params(37)/100;
sigma_mu = M_.params( 32 );
M_.params( 33 ) = M_.params(38)/100;
sigma_eta = M_.params( 33 );
M_.params( 34 ) = M_.params(39)/100;
sigma_z = M_.params( 34 );
M_.params( 35 ) = M_.params(40)/100;
sigma_r = M_.params( 35 );
mc=(epsilonp-1)/epsilonp;
M_.params( 26 ) = 1/M_.params(23)-M_.params(46)*(1-M_.params(46)^(-1)*(1-M_.params(4)))*mc*M_.params(3)/(M_.params(4)+M_.params(46)*M_.params(2)^(-1)-1);
c_y = M_.params( 26 );
M_.params( 27 ) = mc*(M_.params(6)-1)/M_.params(6)*(1-M_.params(3))*(1-M_.params(2)*M_.params(7)/M_.params(46));
numerator = M_.params( 27 );
M_.params( 28 ) = (1-M_.params(7)/M_.params(46))*M_.params(26);
denominator = M_.params( 28 );
M_.params( 25 ) = (M_.params(27)/M_.params(28))^(1/(1+M_.params(8)));
Nss = M_.params( 25 );
M_.params( 30 ) = M_.params(46)*M_.params(2)^(-1)*M_.params(24);
Rbar = M_.params( 30 );
M_.params( 43 ) = M_.params(4)+M_.params(46)*M_.params(2)^(-1)-1;
rk = M_.params( 43 );
%
% INITVAL instructions
%
options_.initval_file = 0;
oo_.steady_state( 22 ) = M_.params(46);
oo_.steady_state( 5 ) = M_.params(24);
oo_.steady_state( 6 ) = M_.params(24);
oo_.steady_state( 4 ) = (M_.params(5)-1)/M_.params(5);
oo_.steady_state( 8 ) = M_.params(24)*oo_.steady_state(22);
oo_.steady_state( 7 ) = M_.params(24)*oo_.steady_state(22);
oo_.steady_state( 16 ) = 1;
oo_.steady_state( 17 ) = 0;
oo_.steady_state( 13 ) = 1;
oo_.steady_state( 15 ) = M_.params(4)+M_.params(2)^(-1)*oo_.steady_state(22)-1;
oo_.steady_state( 10 ) = M_.params(25);
oo_.steady_state( 18 ) = oo_.steady_state(22)*M_.params(25)*(mc*M_.params(3)/(1-M_.params(3))/(M_.params(4)+M_.params(2)^(-1)*oo_.steady_state(22)-1))^(1/(1-M_.params(3)));
oo_.steady_state( 25 ) = (oo_.steady_state(22)^(-1)*oo_.steady_state(18))^M_.params(3)*oo_.steady_state(10)^(1-M_.params(3));
oo_.steady_state( 9 ) = (1-M_.params(3))*mc/oo_.steady_state(10)*oo_.steady_state(25);
oo_.steady_state( 12 ) = oo_.steady_state(18)*(1-(1-M_.params(4))/oo_.steady_state(22));
oo_.steady_state( 2 ) = oo_.steady_state(25)/M_.params(23)-oo_.steady_state(12)/oo_.steady_state(25);
oo_.steady_state( 14 ) = 1/M_.params(23);
oo_.steady_state( 19 ) = M_.params(2)^(-1)*M_.params(24)*oo_.steady_state(22);
oo_.steady_state( 3 ) = oo_.steady_state(22)^(-1)*(oo_.steady_state(2)-M_.params(7)*oo_.steady_state(2)/oo_.steady_state(22))^(-1);
oo_.steady_state( 11 ) = 0;
oo_.steady_state( 1 ) = (1-M_.params(7)*oo_.steady_state(22)^(-1))^(-1)*(1-M_.params(7)*M_.params(2)*oo_.steady_state(22)^(-1))/oo_.steady_state(2);
oo_.steady_state( 23 ) = M_.params(23);
oo_.steady_state( 24 ) = 0;
oo_.steady_state( 20 ) = 0;
oo_.steady_state( 26 ) = oo_.steady_state(25);
oo_.steady_state( 27 ) = oo_.steady_state(2);
oo_.steady_state( 28 ) = oo_.steady_state(12);
oo_.steady_state(30)=exp(oo_.exo_steady_state(4))*(oo_.steady_state(12)*exp(oo_.exo_steady_state(4))/oo_.steady_state(12)-1)*exp(oo_.steady_state(20))*oo_.steady_state(13)*M_.params(2)*M_.params(9);
if M_.exo_nbr > 0
	oo_.exo_simul = ones(M_.maximum_lag,1)*oo_.exo_steady_state';
end
if M_.exo_det_nbr > 0
	oo_.exo_det_simul = ones(M_.maximum_lag,1)*oo_.exo_det_steady_state';
end
%
% SHOCKS instructions
%
M_.exo_det_length = 0;
M_.Sigma_e(1, 1) = (M_.params(31))^2;
M_.Sigma_e(2, 2) = (M_.params(32))^2;
M_.Sigma_e(3, 3) = (M_.params(33))^2;
M_.Sigma_e(4, 4) = (M_.params(34))^2;
M_.Sigma_e(5, 5) = (M_.params(35))^2;
options_.noprint=1;
options_.solve_algo = 1;
options_.solve_tolf = 0.001;
options_.steady.maxit = 500000;
steady;
[eigenvalues_,result,info] = check(M_, options_, oo_);
if result==1
options_.irf = 0;
options_.nomoments = 1;
options_.order = 2;
options_.pruning = 1;
var_list_ = char();
info = stoch_simul(var_list_);
estrun=result;
else
estrun=result;
display('no solution')
return
end
save('medscalenew_results.mat', 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save('medscalenew_results.mat', 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save('medscalenew_results.mat', 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save('medscalenew_results.mat', 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save('medscalenew_results.mat', 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save('medscalenew_results.mat', 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save('medscalenew_results.mat', 'oo_recursive_', '-append');
end


disp(['Total computing time : ' dynsec2hms(toc(tic0)) ]);
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
